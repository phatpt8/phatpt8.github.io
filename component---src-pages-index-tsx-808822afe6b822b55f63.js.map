{"version":3,"sources":["webpack:///./src/components/portfolio.tsx","webpack:///./src/pages/index.tsx"],"names":["commands","help","Portfolio","outputRef","useRef","inputRef","useState","value","setValue","lines","setLines","useEffect","current","focus","className","css","portfolio","terminal","onClick","terminalBar","dot","red","yellow","green","terminalWindow","ref","terminalLine","code","map","line","Fragment","key","id","success","directory","command","info","userInput","type","input","autoComplete","onChange","e","target","onKeyDown","Date","now","requestAnimationFrame","scrollTop","scrollHeight","IndexPage","title"],"mappings":"yjBAWA,IAAMA,EAAmC,CACvCC,KAAM,aA8FOC,EA3FG,SAAC,I,2EAAc,IAC/B,IAAMC,EAAYC,iBAAuB,MACnCC,EAAWD,iBAAyB,MAFX,EAGLE,mBAAiB,IAApCC,EAHwB,KAGjBC,EAHiB,OAILF,mBAAiB,IAApCG,EAJwB,KAIjBC,EAJiB,KAY/B,OANAC,qBAAU,WACJN,EAASO,SACXP,EAASO,QAAQC,UAElB,CAACR,IAGF,yBAAKS,UAAWC,IAAIC,WAClB,yBACEF,UAAWC,IAAIE,SACfC,QAAS,kBAAMb,EAASO,SAAWP,EAASO,QAAQC,UAEpD,yBAAKC,UAAWC,IAAII,aAClB,0BAAML,UAAcC,IAAIK,IAAT,IAAgBL,IAAIM,MACnC,0BAAMP,UAAcC,IAAIK,IAAT,IAAgBL,IAAIO,SACnC,0BAAMR,UAAcC,IAAIK,IAAT,IAAgBL,IAAIQ,SAErC,yBAAKT,UAAWC,IAAIS,eAAgBC,IAAKtB,GACvC,yBAAKW,UAAWC,IAAIW,cAApB,iBACgB,0BAAMZ,UAAWC,IAAIY,MAArB,QADhB,kCAIClB,EAAMmB,KAAI,SAAAC,GAAI,OACb,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,EAAKG,IACxB,yBAAKlB,UAAWC,IAAIW,cAClB,0BAAMZ,UAAWC,IAAIkB,SAArB,KACA,0BAAMnB,UAAWC,IAAImB,WAArB,KACA,8BAAOL,EAAKM,UAEd,yBAAKrB,UAAWC,IAAIW,cACH,cAAdG,EAAKO,MAAwB,8BAAOP,EAAKO,MAC3B,cAAdP,EAAKO,MACJ,sCACO,0BAAMtB,UAAWC,IAAIY,MAArB,QADP,aAOR,yBAAKb,UAAWC,IAAIW,cAClB,0BAAMZ,UAAWC,IAAIkB,SAArB,KACA,0BAAMnB,UAAWC,IAAImB,WAArB,KACA,0BAAMpB,UAAWC,IAAIsB,WAAY9B,GACjC,2BACEkB,IAAKpB,EACLiC,KAAK,OACLxB,UAAWC,IAAIwB,MACfC,aAAa,MACbjC,MAAOA,EACPkC,SAAU,SAAAC,GAAC,OAAIlC,EAASkC,EAAEC,OAAOpC,QACjCqC,UAAW,SAAAF,GACI,SAATA,EAAEX,MACA/B,EAASO,IACXG,EAAS,GAAD,SACHD,GADG,CAEN,CAAEuB,GAAIa,KAAKC,MAAOX,QAAS5B,EAAO6B,KAAMpC,EAASO,OAEnDC,EAAS,MAETE,EAAS,GAAD,SACHD,GADG,CAEN,CACEuB,GAAIa,KAAKC,MACTX,QAAS5B,EACT6B,KAAM,gBAGV5B,EAAS,KAEXuC,uBAAsB,WAChB5C,EAAUS,UACZT,EAAUS,QAAQoC,UAChB7C,EAAUS,QAAQqC,0B,YChF3BC,UAPG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,EAAD","file":"component---src-pages-index-tsx-808822afe6b822b55f63.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport css from './portfolio.module.css'\n\ninterface Line {\n  id: number\n  command: string\n  info: string\n}\n\ninterface Props {}\n\nconst commands: Record<string, string> = {\n  help: 'help you?',\n}\n\nconst Portfolio = ({}: Props) => {\n  const outputRef = useRef<HTMLDivElement>(null)\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [value, setValue] = useState<string>('')\n  const [lines, setLines] = useState<Line[]>([])\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [inputRef])\n\n  return (\n    <div className={css.portfolio}>\n      <div\n        className={css.terminal}\n        onClick={() => inputRef.current && inputRef.current.focus()}\n      >\n        <div className={css.terminalBar}>\n          <span className={`${css.dot} ${css.red}`} />\n          <span className={`${css.dot} ${css.yellow}`} />\n          <span className={`${css.dot} ${css.green}`} />\n        </div>\n        <div className={css.terminalWindow} ref={outputRef}>\n          <div className={css.terminalLine}>\n            Welcome! Type <span className={css.code}>help</span> for list of\n            support commands.\n          </div>\n          {lines.map(line => (\n            <React.Fragment key={line.id}>\n              <div className={css.terminalLine}>\n                <span className={css.success}>➜</span>\n                <span className={css.directory}>~</span>\n                <span>{line.command}</span>\n              </div>\n              <div className={css.terminalLine}>\n                {line.info !== 'Not Found' && <span>{line.info}</span>}\n                {line.info === 'Not Found' && (\n                  <span>\n                    Type <span className={css.code}>help</span> !!!\n                  </span>\n                )}\n              </div>\n            </React.Fragment>\n          ))}\n          <div className={css.terminalLine}>\n            <span className={css.success}>➜</span>\n            <span className={css.directory}>~</span>\n            <span className={css.userInput}>{value}</span>\n            <input\n              ref={inputRef}\n              type=\"text\"\n              className={css.input}\n              autoComplete=\"off\"\n              value={value}\n              onChange={e => setValue(e.target.value)}\n              onKeyDown={e => {\n                if (e.key == 'Enter') {\n                  if (commands[value]) {\n                    setLines([\n                      ...lines,\n                      { id: Date.now(), command: value, info: commands[value] },\n                    ])\n                    setValue('')\n                  } else {\n                    setLines([\n                      ...lines,\n                      {\n                        id: Date.now(),\n                        command: value,\n                        info: 'Not Found',\n                      },\n                    ])\n                    setValue('')\n                  }\n                  requestAnimationFrame(() => {\n                    if (outputRef.current) {\n                      outputRef.current.scrollTop =\n                        outputRef.current.scrollHeight\n                    }\n                  })\n                }\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Portfolio\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Portfolio from \"../components/portfolio\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <Portfolio />\n  </Layout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}